// c.gr.gen.h
// *** DO NOT EDIT BY HAND ***
// automatically generated by elkhound, from c.gr

#ifndef C_GR_GEN_H
#define C_GR_GEN_H

#include "useract.h"     // UserActions


#line 11 "c.gr"


#include "strtable.h"     // StringRef (r)
#include "c_type.h"       // type identifiers like ST_CHAR (r)
#include "lexer2.h"       // lexer2's token ids for classify()
#include "cparse.h"       // ParseEnv
#include "trace.h"        // trace
#include "c.ast.gen.h"    // C abstract syntax

using std::endl;

#ifdef NDEBUG
  #define D(msg)
#else
  #define D(msg) \
    trace("c") << msg << endl
#endif


#line 32 "c.gr.gen.h"


// parser context class
class 
#line 31 "c.gr"
 CParse : public UserActions, public ParseEnv {
public:
  CParse(StringTable &table, CCLang &lang)
    : ParseEnv(table, lang) {}

  // when this is the last element in a parameter list, the function
  // is a vararg function
  ASTTypeId *ellipsisTypeId()
  {
    return new ASTTypeId(new TS_simple(ST_ELLIPSIS),
                         new Declarator(new D_name(SL_UNKNOWN, NULL, NULL), NULL));
  }

#line 51 "c.gr.gen.h"


private:
  USER_ACTION_FUNCTIONS      // see useract.h

  // declare the actual action function
  static SemanticValue doReductionAction(
    CParse *ths,
    int productionId, SemanticValue const *semanticValues,
  SourceLoc loc,
  SourceLoc endloc);

  // declare the classifier function
  static int reclassifyToken(
    CParse *ths,
    int oldTokenType, SemanticValue sval);

  TranslationUnit* action0___EarlyStartSymbol(SourceLoc loc, SourceLoc endloc, TranslationUnit* top);
  TranslationUnit* action1_File(SourceLoc loc, SourceLoc endloc, TranslationUnit* t);
  void action2_EnterScope(SourceLoc loc, SourceLoc endloc);
  void action3_LeaveScope(SourceLoc loc, SourceLoc endloc);
  StringRef action4_TypeName(SourceLoc loc, SourceLoc endloc, StringRef n);
  StringRef action5_VariableName(SourceLoc loc, SourceLoc endloc, StringRef n);
  StringRef action6_AnyName(SourceLoc loc, SourceLoc endloc, StringRef n);
  StringRef action7_AnyName(SourceLoc loc, SourceLoc endloc, StringRef n);
  TranslationUnit* action8_TranslationUnit(SourceLoc loc, SourceLoc endloc);
  TranslationUnit* action9_TranslationUnit(SourceLoc loc, SourceLoc endloc, TranslationUnit* t, TopForm* d);
  TranslationUnit* action10_TranslationUnit(SourceLoc loc, SourceLoc endloc, TranslationUnit* t, SemanticValue a);
  TranslationUnit* action11_TranslationUnit(SourceLoc loc, SourceLoc endloc, TranslationUnit* t);
  Expression* action12_PrimaryExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action13_PrimaryExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action14_PrimaryExpression(SourceLoc loc, SourceLoc endloc, StringRef e);
  Expression* action15_PrimaryExpression(SourceLoc loc, SourceLoc endloc, StringRef scope, StringRef name);
  Expression* action16_PrimaryExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action17_Literal(SourceLoc loc, SourceLoc endloc, int i);
  Expression* action18_Literal(SourceLoc loc, SourceLoc endloc, float* f);
  Expression* action19_Literal(SourceLoc loc, SourceLoc endloc, StringRef s);
  Expression* action20_Literal(SourceLoc loc, SourceLoc endloc, char c);
  Expression* action21_Literal(SourceLoc loc, SourceLoc endloc);
  Expression* action22_Literal(SourceLoc loc, SourceLoc endloc);
  StringRef action23_StringLiteral(SourceLoc loc, SourceLoc endloc, StringRef s);
  StringRef action24_PQVarName(SourceLoc loc, SourceLoc endloc, StringRef n);
  Expression* action25_PostfixExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action26_PostfixExpression(SourceLoc loc, SourceLoc endloc, Expression* a, Expression* e);
  Expression* action27_PostfixExpression(SourceLoc loc, SourceLoc endloc, Expression* f, ASTList<Expression>* e);
  Expression* action28_PostfixExpression(SourceLoc loc, SourceLoc endloc, Expression* p, StringRef n);
  Expression* action29_PostfixExpression(SourceLoc loc, SourceLoc endloc, Expression* p, StringRef n);
  Expression* action30_PostfixExpression(SourceLoc loc, SourceLoc endloc, Expression* p);
  Expression* action31_PostfixExpression(SourceLoc loc, SourceLoc endloc, Expression* p);
  ASTList<Expression>* action32_ExpressionList(SourceLoc loc, SourceLoc endloc, Expression* a);
  ASTList<Expression>* action33_ExpressionList(SourceLoc loc, SourceLoc endloc, ASTList<Expression>* e, Expression* a);
  ASTList<Expression>* action34_ExpressionListOpt(SourceLoc loc, SourceLoc endloc);
  ASTList<Expression>* action35_ExpressionListOpt(SourceLoc loc, SourceLoc endloc, ASTList<Expression>* e);
  Expression* action36_UnaryExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action37_UnaryExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action38_UnaryExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action39_UnaryExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action40_UnaryExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action41_UnaryExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action42_UnaryExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action43_UnaryExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action44_UnaryExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action45_UnaryExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action46_UnaryExpression(SourceLoc loc, SourceLoc endloc, ASTTypeId* t);
  Expression* action47_UnaryExpression(SourceLoc loc, SourceLoc endloc, E_new* e);
  E_new* action48_NewExpression(SourceLoc loc, SourceLoc endloc, TypeSpecifier* t);
  E_new* action49_NewExpression(SourceLoc loc, SourceLoc endloc, ASTTypeId* t);
  Expression* action50_CastExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action51_CastExpression(SourceLoc loc, SourceLoc endloc, ASTTypeId* t, Expression* e);
  Expression* action52_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action53_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action54_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action55_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action56_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action57_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action58_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action59_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action60_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action61_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action62_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action63_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action64_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action65_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action66_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action67_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action68_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action69_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action70_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action71_BinaryExpression(SourceLoc loc, SourceLoc endloc, Expression* left, Expression* right);
  Expression* action72_ConditionalExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action73_ConditionalExpression(SourceLoc loc, SourceLoc endloc, Expression* cond, Expression* th, Expression* el);
  Expression* action74_AssignmentExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action75_AssignmentExpression(SourceLoc loc, SourceLoc endloc, Expression* e1, enum BinaryOp op, Expression* e2);
  enum BinaryOp action76_AssignmentOperator(SourceLoc loc, SourceLoc endloc);
  enum BinaryOp action77_AssignmentOperator(SourceLoc loc, SourceLoc endloc);
  enum BinaryOp action78_AssignmentOperator(SourceLoc loc, SourceLoc endloc);
  enum BinaryOp action79_AssignmentOperator(SourceLoc loc, SourceLoc endloc);
  enum BinaryOp action80_AssignmentOperator(SourceLoc loc, SourceLoc endloc);
  enum BinaryOp action81_AssignmentOperator(SourceLoc loc, SourceLoc endloc);
  enum BinaryOp action82_AssignmentOperator(SourceLoc loc, SourceLoc endloc);
  enum BinaryOp action83_AssignmentOperator(SourceLoc loc, SourceLoc endloc);
  enum BinaryOp action84_AssignmentOperator(SourceLoc loc, SourceLoc endloc);
  enum BinaryOp action85_AssignmentOperator(SourceLoc loc, SourceLoc endloc);
  enum BinaryOp action86_AssignmentOperator(SourceLoc loc, SourceLoc endloc);
  Expression* action87_Expression(SourceLoc loc, SourceLoc endloc, Expression* ae);
  Expression* action88_Expression(SourceLoc loc, SourceLoc endloc, Expression* e, Expression* ae);
  Expression* action89_ExpressionOpt(SourceLoc loc, SourceLoc endloc);
  Expression* action90_ExpressionOpt(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action91_ConstantExpression(SourceLoc loc, SourceLoc endloc, Expression* e);
  Statement* action92_Statement(SourceLoc loc, SourceLoc endloc, StringRef n, Statement* s);
  Statement* action93_Statement(SourceLoc loc, SourceLoc endloc, Expression* e);
  Statement* action94_Statement(SourceLoc loc, SourceLoc endloc, Expression* low, Expression* high);
  Statement* action95_Statement(SourceLoc loc, SourceLoc endloc, Statement* s);
  Statement* action96_Statement(SourceLoc loc, SourceLoc endloc, Statement* s);
  Statement* action97_Statement(SourceLoc loc, SourceLoc endloc, S_compound* s);
  Statement* action98_Statement(SourceLoc loc, SourceLoc endloc, Expression* e, Statement* s);
  Statement* action99_Statement(SourceLoc loc, SourceLoc endloc, Expression* e, Statement* s1, Statement* s2);
  Statement* action100_Statement(SourceLoc loc, SourceLoc endloc, Expression* e, Statement* s);
  Statement* action101_Statement(SourceLoc loc, SourceLoc endloc, Expression* e, Statement* s);
  Statement* action102_Statement(SourceLoc loc, SourceLoc endloc, Statement* s, Expression* e);
  Statement* action103_Statement(SourceLoc loc, SourceLoc endloc, Statement* s1, Expression* c, Expression* e, Statement* s2);
  Statement* action104_Statement(SourceLoc loc, SourceLoc endloc);
  Statement* action105_Statement(SourceLoc loc, SourceLoc endloc);
  Statement* action106_Statement(SourceLoc loc, SourceLoc endloc, Expression* e);
  Statement* action107_Statement(SourceLoc loc, SourceLoc endloc);
  Statement* action108_Statement(SourceLoc loc, SourceLoc endloc, StringRef n);
  Statement* action109_Statement(SourceLoc loc, SourceLoc endloc, Declaration* d);
  Statement* action110_Statement(SourceLoc loc, SourceLoc endloc);
  Statement* action111_Statement(SourceLoc loc, SourceLoc endloc, Expression* e);
  Statement* action112_Statement(SourceLoc loc, SourceLoc endloc, Expression* e);
  Statement* action113_Statement(SourceLoc loc, SourceLoc endloc, Expression* e);
  Statement* action114_Statement(SourceLoc loc, SourceLoc endloc, Expression* e);
  Statement* action115_Statement(SourceLoc loc, SourceLoc endloc, Statement* s);
  Statement* action116_ExpressionStatement(SourceLoc loc, SourceLoc endloc);
  Statement* action117_ExpressionStatement(SourceLoc loc, SourceLoc endloc, Expression* e);
  S_compound* action118_CompoundStatement(SourceLoc loc, SourceLoc endloc, ASTList<Statement>* seq);
  ASTList<Statement>* action119_StatementSeqOpt(SourceLoc loc, SourceLoc endloc);
  ASTList<Statement>* action120_StatementSeqOpt(SourceLoc loc, SourceLoc endloc, ASTList<Statement>* seq, Statement* s);
  Expression* action121_Condition(SourceLoc loc, SourceLoc endloc, Expression* e);
  Expression* action122_ConditionOpt(SourceLoc loc, SourceLoc endloc);
  Expression* action123_ConditionOpt(SourceLoc loc, SourceLoc endloc, Expression* c);
  Statement* action124_ForInitStatement(SourceLoc loc, SourceLoc endloc, Statement* s);
  TopForm* action125_Declaration(SourceLoc loc, SourceLoc endloc, Declaration* d);
  TopForm* action126_Declaration(SourceLoc loc, SourceLoc endloc, TF_func* d);
  Declaration* action127_BlockDeclaration(SourceLoc loc, SourceLoc endloc, Declaration* d);
  Declaration* action128_SimpleDeclaration(SourceLoc loc, SourceLoc endloc, Declaration* spec, ASTList<Declarator>* list);
  Declaration* action129_SimpleDeclaration(SourceLoc loc, SourceLoc endloc, Declaration* spec, ASTList<Declarator>* list);
  Declaration* action130_DeclSpecifier(SourceLoc loc, SourceLoc endloc, enum DeclFlags m, TypeSpecifier* s);
  Declaration* action131_DeclSpecifier(SourceLoc loc, SourceLoc endloc, enum DeclFlags m, TypeSpecifier* s);
  Declaration* action132_DeclSpecifier(SourceLoc loc, SourceLoc endloc, enum DeclFlags m, TypeSpecifier* s);
  Declaration* action133_DeclSpecifier(SourceLoc loc, SourceLoc endloc, TypeSpecifier* s);
  Declaration* action134_DeclSpecifier(SourceLoc loc, SourceLoc endloc, TypeSpecifier* s);
  enum DeclFlags action135_DeclModifier(SourceLoc loc, SourceLoc endloc);
  enum DeclFlags action136_DeclModifier(SourceLoc loc, SourceLoc endloc);
  enum DeclFlags action137_DeclModifier(SourceLoc loc, SourceLoc endloc);
  enum DeclFlags action138_DeclModifier(SourceLoc loc, SourceLoc endloc);
  enum DeclFlags action139_DeclModifier(SourceLoc loc, SourceLoc endloc);
  enum DeclFlags action140_DeclModifier(SourceLoc loc, SourceLoc endloc);
  enum DeclFlags action141_DeclModifier(SourceLoc loc, SourceLoc endloc);
  enum DeclFlags action142_DeclModifier(SourceLoc loc, SourceLoc endloc);
  TypeSpecifier* action143_TypeSpecifier(SourceLoc loc, SourceLoc endloc, StringRef n);
  TypeSpecifier* action144_TypeSpecifier(SourceLoc loc, SourceLoc endloc, enum SimpleTypeId s);
  TypeSpecifier* action145_TypeSpecifier(SourceLoc loc, SourceLoc endloc, TS_elaborated* s);
  TypeSpecifier* action146_TypeSpecifier(SourceLoc loc, SourceLoc endloc, TS_classSpec* s);
  TypeSpecifier* action147_TypeSpecifier(SourceLoc loc, SourceLoc endloc, TS_enumSpec* s);
  TypeSpecifier* action148_TypeSpecifier(SourceLoc loc, SourceLoc endloc, enum CVFlags q, TypeSpecifier* s);
  TypeSpecifier* action149_TypeSpecifier(SourceLoc loc, SourceLoc endloc, TypeSpecifier* s, enum CVFlags q);
  TypeSpecifier* action150_TypeSpecifier(SourceLoc loc, SourceLoc endloc, TypeSpecifier* s);
  TS_elaborated* action151_ElaboratedTypeSpecifier(SourceLoc loc, SourceLoc endloc, enum TypeIntr k, StringRef n);
  TS_elaborated* action152_ElaboratedTypeSpecifier(SourceLoc loc, SourceLoc endloc, StringRef n);
  enum SimpleTypeId action153_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action154_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action155_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action156_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action157_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action158_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action159_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action160_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action161_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action162_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action163_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action164_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action165_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action166_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action167_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action168_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action169_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action170_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action171_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action172_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action173_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action174_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action175_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action176_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action177_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action178_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action179_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action180_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  enum SimpleTypeId action181_SimpleTypeSpecifier(SourceLoc loc, SourceLoc endloc);
  StringRef action182_PQTypeName(SourceLoc loc, SourceLoc endloc, StringRef n);
  TS_enumSpec* action183_EnumSpecifier(SourceLoc loc, SourceLoc endloc, ASTList<Enumerator>* list);
  TS_enumSpec* action184_EnumSpecifier(SourceLoc loc, SourceLoc endloc, StringRef n, ASTList<Enumerator>* list);
  ASTList<Enumerator>* action185_EnumeratorList(SourceLoc loc, SourceLoc endloc, Enumerator* def);
  ASTList<Enumerator>* action186_EnumeratorList(SourceLoc loc, SourceLoc endloc, ASTList<Enumerator>* list, Enumerator* def);
  ASTList<Enumerator>* action187_EnumeratorListOpt(SourceLoc loc, SourceLoc endloc);
  ASTList<Enumerator>* action188_EnumeratorListOpt(SourceLoc loc, SourceLoc endloc, ASTList<Enumerator>* list);
  Enumerator* action189_EnumeratorDefinition(SourceLoc loc, SourceLoc endloc, StringRef name);
  Enumerator* action190_EnumeratorDefinition(SourceLoc loc, SourceLoc endloc, StringRef name, Expression* expr);
  ASTList<Declarator>* action191_InitDeclaratorList(SourceLoc loc, SourceLoc endloc, Declarator* d);
  ASTList<Declarator>* action192_InitDeclaratorList(SourceLoc loc, SourceLoc endloc, ASTList<Declarator>* list, Declarator* d);
  ASTList<Declarator>* action193_InitDeclaratorListOpt(SourceLoc loc, SourceLoc endloc);
  ASTList<Declarator>* action194_InitDeclaratorListOpt(SourceLoc loc, SourceLoc endloc, ASTList<Declarator>* list);
  Declarator* action195_InitDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  Declarator* action196_InitDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d, Initializer* i);
  Initializer* action197_Initializer(SourceLoc loc, SourceLoc endloc, Initializer* i);
  Initializer* action198_InitializerClause(SourceLoc loc, SourceLoc endloc, Expression* e);
  Initializer* action199_InitializerClause(SourceLoc loc, SourceLoc endloc, ASTList<Initializer>* c);
  Initializer* action200_LabeledInitializerClause(SourceLoc loc, SourceLoc endloc, Initializer* init);
  Initializer* action201_LabeledInitializerClause(SourceLoc loc, SourceLoc endloc, Expression* index, Initializer* init);
  Initializer* action202_LabeledInitializerClause(SourceLoc loc, SourceLoc endloc, Expression* lo, Expression* hi, Initializer* init);
  Initializer* action203_LabeledInitializerClause(SourceLoc loc, SourceLoc endloc, StringRef field, Initializer* init);
  Initializer* action204_LabeledInitializerClause(SourceLoc loc, SourceLoc endloc, Expression* index, StringRef field, Initializer* init);
  ASTList<Initializer>* action205_CompoundInitializer(SourceLoc loc, SourceLoc endloc, ASTList<Initializer>* list);
  ASTList<Initializer>* action206_CompoundInitializer(SourceLoc loc, SourceLoc endloc);
  void action207_CommaOpt(SourceLoc loc, SourceLoc endloc);
  void action208_CommaOpt(SourceLoc loc, SourceLoc endloc);
  ASTList<Initializer>* action209_InitializerList(SourceLoc loc, SourceLoc endloc, Initializer* init);
  ASTList<Initializer>* action210_InitializerList(SourceLoc loc, SourceLoc endloc, ASTList<Initializer>* list, Initializer* init);
  IDeclarator* action211_Declarator(SourceLoc loc, SourceLoc endloc, PtrOperator* p, IDeclarator* d);
  IDeclarator* action212_Declarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  IDeclarator* action213_Declarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  IDeclarator* action214_DirectDeclarator(SourceLoc loc, SourceLoc endloc, StringRef n, ThmprvAttr* a);
  IDeclarator* action215_DirectDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d, ASTList<ASTTypeId>* args, ASTList<FuncAnnotation>* ann);
  IDeclarator* action216_DirectDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d, Expression* sz);
  IDeclarator* action217_DirectDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  IDeclarator* action218_DirectDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  PtrOperator* action219_PtrOperator(SourceLoc loc, SourceLoc endloc, enum CVFlags q);
  enum CVFlags action220_CVQualifierSeqOpt(SourceLoc loc, SourceLoc endloc);
  enum CVFlags action221_CVQualifierSeqOpt(SourceLoc loc, SourceLoc endloc, enum CVFlags s);
  enum CVFlags action222_CVQualifierSeq(SourceLoc loc, SourceLoc endloc, enum CVFlags q);
  enum CVFlags action223_CVQualifierSeq(SourceLoc loc, SourceLoc endloc, enum CVFlags q, enum CVFlags s);
  enum CVFlags action224_CVQualifier(SourceLoc loc, SourceLoc endloc);
  enum CVFlags action225_CVQualifier(SourceLoc loc, SourceLoc endloc);
  enum CVFlags action226_CVQualifier(SourceLoc loc, SourceLoc endloc);
  ASTList<Declarator>* action227_TypedefDeclaratorList(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  ASTList<Declarator>* action228_TypedefDeclaratorList(SourceLoc loc, SourceLoc endloc, ASTList<Declarator>* list, IDeclarator* d);
  IDeclarator* action229_TypedefDeclarator(SourceLoc loc, SourceLoc endloc, PtrOperator* p, IDeclarator* d);
  IDeclarator* action230_TypedefDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  IDeclarator* action231_DirectTypedefDeclarator(SourceLoc loc, SourceLoc endloc, StringRef n);
  IDeclarator* action232_DirectTypedefDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d, ASTList<ASTTypeId>* args, ASTList<FuncAnnotation>* ann);
  IDeclarator* action233_DirectTypedefDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d, Expression* sz);
  IDeclarator* action234_DirectTypedefDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  IDeclarator* action235_DirectTypedefDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  ASTTypeId* action236_TypeId(SourceLoc loc, SourceLoc endloc, TypeSpecifier* spec, IDeclarator* decl);
  IDeclarator* action237_AbstractDeclaratorOpt(SourceLoc loc, SourceLoc endloc);
  IDeclarator* action238_AbstractDeclaratorOpt(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  IDeclarator* action239_AbstractDeclarator(SourceLoc loc, SourceLoc endloc, PtrOperator* p, IDeclarator* d);
  IDeclarator* action240_AbstractDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  IDeclarator* action241_DirectAbstractDeclaratorOpt(SourceLoc loc, SourceLoc endloc);
  IDeclarator* action242_DirectAbstractDeclaratorOpt(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  IDeclarator* action243_DirectAbstractDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d, ASTList<ASTTypeId>* args, ASTList<FuncAnnotation>* ann);
  IDeclarator* action244_DirectAbstractDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d, Expression* sz);
  IDeclarator* action245_DirectAbstractDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  IDeclarator* action246_DirectAbstractDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  ASTList<ASTTypeId>* action247_ParameterDeclarationClause(SourceLoc loc, SourceLoc endloc, ASTList<ASTTypeId>* p);
  ASTList<ASTTypeId>* action248_ParameterDeclarationClause(SourceLoc loc, SourceLoc endloc);
  ASTList<ASTTypeId>* action249_ParameterDeclarationClause(SourceLoc loc, SourceLoc endloc);
  ASTList<ASTTypeId>* action250_ParameterDeclarationClause(SourceLoc loc, SourceLoc endloc, ASTList<ASTTypeId>* p);
  ASTList<ASTTypeId>* action251_ParameterDeclarationClause(SourceLoc loc, SourceLoc endloc, ASTList<ASTTypeId>* p);
  ASTList<ASTTypeId>* action252_ParameterDeclarationList(SourceLoc loc, SourceLoc endloc, ASTTypeId* d);
  ASTList<ASTTypeId>* action253_ParameterDeclarationList(SourceLoc loc, SourceLoc endloc, ASTList<ASTTypeId>* list, ASTTypeId* d);
  ASTTypeId* action254_ParameterDeclaration(SourceLoc loc, SourceLoc endloc, TypeSpecifier* s, IDeclarator* d);
  ASTTypeId* action255_ParameterDeclaration(SourceLoc loc, SourceLoc endloc, TypeSpecifier* s, IDeclarator* d);
  void action256_RegisterOpt(SourceLoc loc, SourceLoc endloc);
  void action257_RegisterOpt(SourceLoc loc, SourceLoc endloc);
  TF_func* action258_FunctionDefinition(SourceLoc loc, SourceLoc endloc, Declaration* r, IDeclarator* d, S_compound* b);
  S_compound* action259_FunctionBody(SourceLoc loc, SourceLoc endloc, S_compound* s);
  TS_classSpec* action260_ClassSpecifier(SourceLoc loc, SourceLoc endloc, enum TypeIntr k, StringRef n, ASTList<Declaration>* memb);
  StringRef action261_ClassNameOpt(SourceLoc loc, SourceLoc endloc);
  StringRef action262_ClassNameOpt(SourceLoc loc, SourceLoc endloc, StringRef n);
  enum TypeIntr action263_ClassKeyword(SourceLoc loc, SourceLoc endloc);
  enum TypeIntr action264_ClassKeyword(SourceLoc loc, SourceLoc endloc);
  enum TypeIntr action265_ClassKeyword(SourceLoc loc, SourceLoc endloc);
  ASTList<Declaration>* action266_MemberDeclarationSeqOpt(SourceLoc loc, SourceLoc endloc);
  ASTList<Declaration>* action267_MemberDeclarationSeqOpt(SourceLoc loc, SourceLoc endloc, ASTList<Declaration>* list, Declaration* decl);
  Declaration* action268_MemberDeclaration(SourceLoc loc, SourceLoc endloc, Declaration* spec, ASTList<Declarator>* list);
  ASTList<Declarator>* action269_MemberDeclaratorList(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  ASTList<Declarator>* action270_MemberDeclaratorList(SourceLoc loc, SourceLoc endloc, ASTList<Declarator>* list, IDeclarator* d);
  IDeclarator* action271_MemberDeclarator(SourceLoc loc, SourceLoc endloc, IDeclarator* d);
  IDeclarator* action272_MemberDeclarator(SourceLoc loc, SourceLoc endloc, Expression* e);
  IDeclarator* action273_MemberDeclarator(SourceLoc loc, SourceLoc endloc, Expression* e);
  IDeclarator* action274_MemberDeclarator(SourceLoc loc, SourceLoc endloc, StringRef n, Expression* e);
  IDeclarator* action275_MemberDeclarator(SourceLoc loc, SourceLoc endloc, StringRef n, Expression* e);
  void action276_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action277_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action278_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action279_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action280_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action281_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action282_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action283_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action284_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action285_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action286_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action287_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action288_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action289_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action290_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action291_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action292_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action293_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action294_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action295_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action296_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action297_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action298_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action299_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action300_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action301_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action302_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action303_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action304_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action305_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action306_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action307_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action308_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action309_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action310_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action311_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action312_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action313_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action314_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action315_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action316_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action317_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action318_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action319_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action320_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action321_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action322_GNUExprOp(SourceLoc loc, SourceLoc endloc);
  void action323_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action324_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action325_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action326_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action327_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action328_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action329_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action330_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action331_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action332_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action333_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action334_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action335_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action336_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action337_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action338_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action339_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action340_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action341_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action342_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action343_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action344_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action345_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action346_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action347_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action348_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action349_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action350_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action351_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action352_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action353_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action354_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action355_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action356_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action357_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action358_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action359_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action360_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action361_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action362_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action363_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action364_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action365_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action366_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action367_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action368_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action369_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action370_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action371_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action372_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action373_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action374_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action375_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action376_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action377_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action378_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action379_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action380_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action381_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action382_GNUExprKeyword(SourceLoc loc, SourceLoc endloc);
  void action383_GNUAttribute(SourceLoc loc, SourceLoc endloc);
  void action384_GNUExprSeq(SourceLoc loc, SourceLoc endloc);
  void action385_GNUExprSeq(SourceLoc loc, SourceLoc endloc);
  void action386_GNUExpr(SourceLoc loc, SourceLoc endloc);
  void action387_GNUExpr(SourceLoc loc, SourceLoc endloc);
  void action388_GNUExpr(SourceLoc loc, SourceLoc endloc);
  void action389_GNUExpr(SourceLoc loc, SourceLoc endloc);
  void action390_GNUExpr(SourceLoc loc, SourceLoc endloc);
  void action391_GNUExpr(SourceLoc loc, SourceLoc endloc);
  void action392_GNUAsmStatement(SourceLoc loc, SourceLoc endloc);
  void action393_GNUAsmStatement(SourceLoc loc, SourceLoc endloc);
  ASTList<FuncAnnotation>* action394_FuncAnnotationsOpt(SourceLoc loc, SourceLoc endloc);
  ASTList<FuncAnnotation>* action395_FuncAnnotationsOpt(SourceLoc loc, SourceLoc endloc, ASTList<FuncAnnotation>* list, FuncAnnotation* ann);
  FuncAnnotation* action396_FuncAnnotation(SourceLoc loc, SourceLoc endloc, ASTList<Declaration>* d, Expression* e);
  FuncAnnotation* action397_FuncAnnotation(SourceLoc loc, SourceLoc endloc, Expression* e);
  ASTList<Declaration>* action398_FADeclListOpt(SourceLoc loc, SourceLoc endloc);
  ASTList<Declaration>* action399_FADeclListOpt(SourceLoc loc, SourceLoc endloc, ASTList<Declaration>* list);
  ASTList<Declaration>* action400_FADeclList(SourceLoc loc, SourceLoc endloc, Declaration* d);
  ASTList<Declaration>* action401_FADeclList(SourceLoc loc, SourceLoc endloc, ASTList<Declaration>* list, Declaration* d);
  ThmprvAttr* action402_ThmprvAttr(SourceLoc loc, SourceLoc endloc);
  ThmprvAttr* action403_ThmprvAttr(SourceLoc loc, SourceLoc endloc, ASTList<ThmprvAttr>* list);
  ASTList<ThmprvAttr>* action404_ThmprvAttrList(SourceLoc loc, SourceLoc endloc, ThmprvAttr* o);
  ASTList<ThmprvAttr>* action405_ThmprvAttrList(SourceLoc loc, SourceLoc endloc, ASTList<ThmprvAttr>* list, ThmprvAttr* o);
  ThmprvAttr* action406_OneThmprvAttr(SourceLoc loc, SourceLoc endloc, StringRef name);
  ThmprvAttr* action407_OneThmprvAttr(SourceLoc loc, SourceLoc endloc, StringRef name, ASTList<ThmprvAttr>* args);
  Expression* action408_ThmprvPredicate(SourceLoc loc, SourceLoc endloc, ASTList<Declaration>* d, Expression* e);
  Expression* action409_ThmprvPredicate(SourceLoc loc, SourceLoc endloc, ASTList<Declaration>* d, Expression* e);
  inline void del_FADeclList(ASTList<Declaration>* list) ;
  inline int classify_L2_NAME(StringRef s) ;

// the function which makes the parse tables
public:
  virtual ParseTables *makeTables();
};

#endif // C_GR_GEN_H
